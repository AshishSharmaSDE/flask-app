pipeline {
  agent any
  environment {
    DOCKER_REGISTRY = "my-docker-registry.com"
    IMAGE_NAME = "my-flask-app"
    CONTAINER_NAME = "my-flask-container"
    GIT_BRANCH = "${env.BRANCH_NAME}"
  }
  stages {
    stage('Build') {
      steps {
        script {
          docker.build("${DOCKER_REGISTRY}/${IMAGE_NAME}:${GIT_BRANCH}", ".")
        }
      }
    }
    stage('Test') {
      steps {
        script {
          docker.withRegistry("${DOCKER_REGISTRY}", 'docker-registry') {
            docker.image("${DOCKER_REGISTRY}/${IMAGE_NAME}:${GIT_BRANCH}").push()
          }
        }
        sh 'docker-compose up -d'
        sh 'docker-compose exec -T flask pytest'
        sh 'docker-compose down'
      }
    }
    stage('Deploy to Dev') {
      when {
        branch 'dev'
      }
      steps {
        script {
          docker.withRegistry("${DOCKER_REGISTRY}", 'docker-registry') {
            docker.image("${DOCKER_REGISTRY}/${IMAGE_NAME}:${GIT_BRANCH}").push()
          }
          sh "ssh user@dev-server 'docker pull ${DOCKER_REGISTRY}/${IMAGE_NAME}:${GIT_BRANCH}'"
          sh "ssh user@dev-server 'docker stop ${CONTAINER_NAME} || true && docker rm ${CONTAINER_NAME} || true'"
          sh "ssh user@dev-server 'docker run -d --name ${CONTAINER_NAME} -p 80:5000 ${DOCKER_REGISTRY}/${IMAGE_NAME}:${GIT_BRANCH}'"
        }
      }
    }
    stage('Deploy to Prod') {
      when {
        branch 'main'
      }
      steps {
        script {
          docker.withRegistry("${DOCKER_REGISTRY}", 'docker-registry') {
            docker.image("${DOCKER_REGISTRY}/${IMAGE_NAME}:${GIT_BRANCH}").push()
          }
          sh "ssh user@prod-server 'docker pull ${DOCKER_REGISTRY}/${IMAGE_NAME}:${GIT_BRANCH}'"
          sh "ssh user@prod-server 'docker stop ${CONTAINER_NAME} || true && docker rm ${CONTAINER_NAME} || true'"
          sh "ssh user@prod-server 'docker run -d --name ${CONTAINER_NAME} -p 80:5000 ${DOCKER_REGISTRY}/${IMAGE_NAME}:${GIT_BRANCH}'"
        }
      }
    }
  }
}
